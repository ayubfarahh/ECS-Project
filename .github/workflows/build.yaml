name: Deploy Docker Image to ECS

on:
    workflow_dispatch:

env:
  AWS_REGION: eu-west-2
  ECR_REPOSITORY: frontend
  IMAGE_TAG: latest
  ECS_CLUSTER: ecs_cluster
  ECS_SERVICE: frontend-service

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Set up Docker
      uses: docker/setup-buildx-action@v3

    - name: Build Docker Image
      run: |
        docker build -t $ECR_REPOSITORY:$IMAGE_TAG ./app

    - name: Scan Docker Image with Trivy
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
        format: table
        severity: CRITICAL
        exit-code: 1
        ignore-unfixed: true

    - name: Log into ECR
      uses: aws-actions/amazon-ecr-login@v2

    - name: Tag and Push Docker Image
      run: |
        docker tag $ECR_REPOSITORY:$IMAGE_TAG 940622738555.dkr.ecr.${AWS_REGION}.amazonaws.com/$ECR_REPOSITORY:$IMAGE_TAG
        docker push 940622738555.dkr.ecr.${AWS_REGION}.amazonaws.com/$ECR_REPOSITORY:$IMAGE_TAG

    - name: Deploy to ECS
      run: |
        aws ecs update-service \
          --cluster $ECS_CLUSTER \
          --service $ECS_SERVICE \
          --force-new-deployment \
          --region $AWS_REGION
